/// form.scss - 1.1.0
/// @author Bernhard Ruoff

%input {
  border: 1px solid getColor(base, border);
  background-color: getColor(base, background);
  color: getColor(base, text);
  font-size: rem(16);
  line-height: rem(24);
  padding: rem(4) rem(16);
  @include border-radius(rem($input-radius));
  margin: rem(4) 0;
  text-align: left;
  min-height: initial;

  @include placeholder {
    font-size: rem(16);
    line-height: rem(24);
    color: getColor(text, light);
  }

  &:focus,
  &:hover {
    border-color: darken(getColor(base, border), 20);
    @extend %shadow%hover;
    @include placeholder {
      color: getColor(base, text);
    }
  }

  &:focus:hover {
    @include placeholder {
      color: getColor(text, lightest);
    }
  }

  &.disabled,
  &[disabled] {
    cursor: not-allowed;
    background-color: getColor(background, lightest);
    border-color: getColor(background, light);
  }

  &.small {
    font-size: rem(14);
    padding-top: 0;
    padding-bottom: 0;
  }

  &.embossed {
    border: none;
    @extend %shadow%dropdown;
  }

  &.big {
    padding-top: rem(8);
    padding-bottom: rem(8);
  }
}

input:not([type="submit"]):not([type="reset"]):not([type="checkbox"]):not([type="radio"]),
select,
textarea {
  @extend %input;
}

/// reset number input

input[type=number]::-webkit-inner-spin-button {
  -webkit-appearance: none;
}

form {

  // Overrides the gutter of the xlcss grid

  fieldset {
    [data-row] {
      margin-left: rem(-8);
      margin-right: rem(-8);
    }

    [data-col] {
      padding-left: rem(8);
      padding-right: rem(8);
    }
  }
  pre {
    background-color: getColor(background, lightest);
    color: getColor(text, light);
    padding: rem(16);
    margin: rem(8);
    max-height: 200px;
    overflow-y: scroll;
  }
}

label {
  margin: 0 0 rem(4) 0;
  color: getColor(base, text);
  cursor: pointer;
  display: block;
  font-size: rem(14);
  @include transition(color .2s);
  @include clearfix;

  a, small, strong {
    display: inline-block;
  }

  small {
    display: inline-block;
    font-size: rem(12);
    line-height: rem(20);
    color: getColor(text, light);

    &:last-child {
      margin: rem(4) 0;
    }
  }

  p, small {
    &:empty {
      display: none;
    }
  }

  &:hover {
    color: getColor(base, text);
  }

  &.disabled {
    cursor: not-allowed;

    &:hover {
      color: getColor(base, text);
    }

    &:not(.active) {
      opacity: .4;

      &:hover {
        opacity: .2;
      }
    }
  }

  input[type="checkbox"],
  input[type="radio"] {

    &:hover {
      @extend %shadow%hover;
    }

    & + small {
      display: inline-block;
      cursor: pointer;
    }
  }

  &.text-center {
    input:not([type="submit"]):not([type="reset"]):not([type="checkbox"]):not([type="radio"]),
    select,
    textarea {
      text-align: center;
    }
  }

  &.mandatory {
    input:not([type="submit"]):not([type="reset"]):not([type="checkbox"]):not([type="radio"]),
    select,
    textarea {
      @include box-shadow(0 0 0 2px rgba(getColor(base, link), .6));
    }
  }
}

fieldset {
  margin-bottom: rem(8);
}